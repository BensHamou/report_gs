version: "3"

services:
  db:
    image: postgres
    container_name: DB_STOCK
    restart: unless-stopped
    environment:
      - POSTGRES_DB=PumaGS
      - POSTGRES_USER=puma_gs
      - POSTGRES_PASSWORD=puma_gs
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5176:5432"
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: stock_app:dev
    restart: unless-stopped
    container_name: APP_STOCK
    ports:
      - "8176:8176"
    volumes:
      - ./report_gs:/report_gs
      - ./media:/app/media
    command: >
      sh -c " python manage.py makemigrations &&
              python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8176"
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_NAME=PumaGS
      - DB_USER=puma_gs
      - DB_PASS=puma_gs
      - DB_PORT=5432
  cron:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    image: stock_cron:dev
    container_name: CRON_STOCK
    depends_on:
      - db
    volumes:
      - ./report_gs:/report_gs
      - ./media:/app/media
    environment:
      - DB_HOST=db
      - DB_NAME=PumaGS
      - DB_USER=puma_gs
      - DB_PASS=puma_gs
      - DB_PORT=5432
    command: >
      sh -c "python manage.py crontab remove &&
            python manage.py crontab add &&
            crond -f"
volumes:
  db_data:
  media_volume:
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.88.0/24